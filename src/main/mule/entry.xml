<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:redis="http://www.mulesoft.org/schema/mule/redis" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:lettuce="http://www.mulesoft.org/schema/mule/lettuce"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/lettuce http://www.mulesoft.org/schema/mule/lettuce/current/mule-lettuce.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/redis http://www.mulesoft.org/schema/mule/redis/current/mule-redis.xsd">
	<sub-flow name="updateEntry" doc:id="b78f8610-4182-4514-8451-f6d010fadca4" >
		<ee:transform doc:name="Transform Message" doc:id="3ae4eae0-716c-42c2-b14d-e1e073353752">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
import * from dw::app::Transforms
output application/json

---
{ 
	active: if (payload.active) 1 else 0,
	"racer:baseUri": payload.racer.baseUri,
	"racer:name": payload.racer.name,
	"racer:id": vars.racerId,
	"status:nameCheck:score": payload.status.nameCheck.score,
	started: toRedisDate(payload.started),
	updated: toRedisDate(payload.updated default now())
} 
		]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="DEBUG" doc:name="DEBUG" doc:id="e1b0b7c1-7c07-49a8-a768-9036b8417b84" message='#[payload]' category="race-data-sapi.updateEntry"/>
		<lettuce:hset doc:name="Store entry info" doc:id="d8c88fb1-b1e8-40ea-962c-3049271c3a31" config-ref="Lettuce_Redis_Config" key='#["challenge:aiagent:$(vars.racerId)"]'>
			<lettuce:fields ><![CDATA[#[payload]]]></lettuce:fields>
		</lettuce:hset>
		<set-payload value="#[vars.entryInformation]" doc:name="Set Payload" doc:id="408e5de4-b33e-4e4e-a245-d304cb79b861" />
		<logger level="INFO" doc:name="Logger" doc:id="b6ef83fd-728b-4d81-b2bf-a457e9fe29aa" message="#[output application/json --- payload]"/>
	</sub-flow>
	<sub-flow name="getEntry" doc:id="40576fd7-6beb-4b31-b6d0-9a918ad040b8" >
		<lettuce:hgetall doc:name="Get entry info" doc:id="65dd9600-e4e6-4b93-a45b-f3ba22f84583" config-ref="Lettuce_Redis_Config" key='#["challenge:aiagent:$(vars.racerId)"]'/>
		<ee:transform doc:name="Transform Message" doc:id="736fc9d0-24e1-49a0-8889-793d7252b1be" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
import fromRedisDate from dw::app::Transforms
output application/json
---
{
	racer: {
		baseUri: payload.'racer:baseUri',
		name: payload.'racer:name',
		id: payload.'racer:id',
	},
	active:  (payload.active != "0"),
	started:  fromRedisDate(payload.started),
	(updated:  fromRedisDate(payload.updated)) if payload.updated?,
	status: {
		nameCheck: {
			score: payload.'status:nameCheck:score' as Number,
		},
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
	<flow name="incrby1" doc:id="3d0f428c-2982-450c-b6b4-7b9aa417fd27" >
		<lettuce:hgetall doc:name="Get racer information" doc:id="61eb38b0-2b9f-444b-b4da-710959fffa8b" config-ref="Lettuce_Redis_Config" key='#["challenge:aiagent:$(vars.racerId)"]'/>
		<choice doc:name="Choice" doc:id="d3c79b92-92cb-433f-98ad-3269b6acdce0">
			<when expression='#[isEmpty(payload.score)]'>
				<set-variable value="#[uuid()]" doc:name="aiagent" doc:id="927d340c-8b11-4c27-a760-5dc05b6bfb08" variableName="aiagent" />
				<lettuce:hset doc:name="HSET" doc:id="8e6ee0b5-50c9-4bdb-a47e-84ea1b927b01" config-ref="Lettuce_Redis_Config" key='#["challenge:aiagent:$(vars.racerId)"]'>
					<lettuce:fields ><![CDATA[#[output application/java
---
{
	"score" : vars.aiagent
}]]]></lettuce:fields>
				</lettuce:hset>
				<set-variable value="#[now()]" doc:name="Set Variable" doc:id="f745f298-eec1-4b1b-b4dc-d1dc7c101f39" variableName="started"/>
			</when>
			<otherwise>
				<logger level="INFO" doc:name="Logger" doc:id="a80203f0-171d-432a-87ea-81fdbd868f00" />
				<set-variable value="#[payload.score]" doc:name="aiagent" doc:id="990b55c2-f67d-45af-bc8d-1de92088a5c0" variableName="aiagent" />
			</otherwise>
		</choice>
		<lettuce:hincrby increment="1" doc:name="Increase name score by 1" doc:id="da4a6f69-4421-499a-af8f-1c17951e4d80" config-ref="Lettuce_Redis_Config" key='#["score:aiagent:$(vars.aiagent)"]' field="name"/>
		<redis:add-to-set doc:name="add to score:season4" doc:id="f68da5bd-40dc-478c-b16b-aafae6685825" key="score:season4" config-ref="redisConfig">
			<redis:value ><![CDATA[#[vars.racerId]]]></redis:value>
		</redis:add-to-set>
		<logger level="INFO" doc:name="Logger" doc:id="f69ac95e-84f4-4058-9818-7798e5eba6f2" />
	</flow>
	<sub-flow name="getScore" doc:id="c28d1aa9-bb84-4fcc-b9a7-bda954391198" >
		<lettuce:hgetall doc:name="Get racer score" doc:id="4b5575d0-e1e0-44d8-aca3-eba57b9c6d9c" config-ref="Lettuce_Redis_Config" key='#["score:aiagent:$(vars.aiagent)"]' />
		<ee:transform doc:name="Score" doc:id="22da1aa9-35c5-4cb2-bbe2-09dad05fe0f4">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	score: {
		name: payload.name as Number
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="92967652-9075-4d46-bf65-48dee0bfcaed" message="Score of racer is #[payload]"/>
	</sub-flow>
</mule>
